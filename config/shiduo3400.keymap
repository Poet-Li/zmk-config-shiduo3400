/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        MOD_TAP: MOD_TAP {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <9 19 29>;
            layers = <2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        f1 {
            bindings = <&kp F1>;
            key-positions = <0 10>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <1 11>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <2 12>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <3 13>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <4 14>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <5 15>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <6 16>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <7 17>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <8 18>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <9 19>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <10 20>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <11 21>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <32 25>;
        };

        COMBO_EXCLAMATION {
            bindings = <&kp EXCLAMATION>;
            key-positions = <0 1>;
        };

        COMBO_AT_ {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 2>;
        };

        COMBO_HASH {
            bindings = <&kp HASH>;
            key-positions = <2 3>;
        };

        COMBO_DOLLAR {
            bindings = <&kp DOLLAR>;
            key-positions = <3 4>;
        };

        COMBO_PERCENT {
            bindings = <&kp PERCENT>;
            key-positions = <4 5>;
        };

        COMBO_CARET {
            bindings = <&kp CARET>;
            key-positions = <6 5>;
        };

        COMBO_AMPERSAND {
            bindings = <&kp AMPERSAND>;
            key-positions = <6 7>;
            timeout-ms = <30>;
        };

        COMBO_ASTERISK {
            bindings = <&kp ASTERISK>;
            key-positions = <8 7>;
        };

        MO_CONFIG_LAYER {
            bindings = <&mo 2>;
            key-positions = <30 31 32 33>;
        };

        COMBO_SEMICOLON {
            bindings = <&kp SEMICOLON>;
            key-positions = <9 18>;
        };

        COMBO_COLON {
            bindings = <&kp COLON>;
            key-positions = <8 17>;
        };

        COMBO_DOUBLE_QUOTES {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 7>;
        };

        COMBO_SINGLE_QUOTE {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <17 26>;
        };

        COMBO_MINUS {
            bindings = <&kp MINUS>;
            key-positions = <0 11>;
        };

        COMBO_UNDERSCORE {
            bindings = <&kp UNDERSCORE>;
            key-positions = <1 12>;
        };

        COMBO_EQUAL {
            bindings = <&kp EQUAL>;
            key-positions = <13 2>;
        };

        COMBO_PLUS {
            bindings = <&kp PLUS>;
            key-positions = <12 23>;
        };

        COMBO_LPAR {
            bindings = <&kp LPAR>;
            key-positions = <3 14>;
        };

        COMBO_RPAR {
            bindings = <&kp RPAR>;
            key-positions = <6 15>;
        };

        COMBO_LBKT {
            bindings = <&kp LBKT>;
            key-positions = <13 24>;
        };

        COMBO_RBKT {
            bindings = <&kp RBKT>;
            key-positions = <16 25>;
        };

        COMBO_LBRC {
            bindings = <&kp LBRC>;
            key-positions = <23 31>;
        };

        COMBO_RBRC {
            bindings = <&kp RBRC>;
            key-positions = <32 26>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <20 21>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <29 28>;
        };

        pgup {
            bindings = <&kp PG_UP>;
            key-positions = <21 22>;
        };

        pgdn {
            bindings = <&kp PG_DN>;
            key-positions = <28 27>;
        };

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <33 26>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <0 9>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <13 16>;
        };

        gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <14 15>;
        };

        toggleAlterLayer {
            bindings = <&tog 1>;
            key-positions = <30 23>;
        };

        volumeDown {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <27 17>;
        };

        volumeUp {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <28 18>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <27 28>;
        };

        comboEsc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 0 1>;
        };

        combo_BACKSLASH {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 26>;
        };

        combo_PIPE {
            bindings = <&kp PIPE>;
            key-positions = <15 25>;
        };

        combo_GRAVE {
            bindings = <&kp GRAVE>;
            key-positions = <13 23>;
        };

        combo_TILDE {
            bindings = <&kp TILDE>;
            key-positions = <14 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&MOD_TAP LCTRL Q  &kp W  &kp E  &kp R            &kp T            &kp Y            &kp U            &kp I      &kp O    &MOD_TAP RCTRL P
&kp A             &kp S  &kp D  &MOD_TAP LALT F  &MOD_TAP LGUI G  &MOD_TAP RGUI H  &MOD_TAP RALT J  &kp K      &kp L    &kp ENTER
&kp Z             &kp X  &kp C  &kp V            &kp B            &kp N            &kp M            &kp COMMA  &kp DOT  &kp SLASH
                                &mo 1            &kp SPACE        &kp BACKSPACE    &kp LEFT_SHIFT
            >;
        };

        alter_layer {
            bindings = <
&kp LCTRL  &kp UP    &trans     &trans        &trans  &trans  &kp N7            &kp N8  &kp N9  &kp RCTRL
&kp LEFT   &kp DOWN  &kp RIGHT  &kp LEFT_ALT  &trans  &trans  &MOD_TAP RALT N4  &kp N5  &kp N6  &trans
&trans     &trans    &trans     &trans        &trans  &trans  &kp N1            &kp N2  &kp N3  &kp N0
                                &trans        &trans  &trans  &trans
            >;
        };

        config {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none
&bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none         &none  &none  &none  &none  &none
&none         &none           &none         &none         &none         &none  &none  &none  &none  &none
                                            &none         &none         &none  &none
            >;
        };
    };
};
